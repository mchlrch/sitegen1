/*
post support_companion_objects (
  group:    td4j
  title:    "Added support for companion objects in td4j"
  refTitle: "Support for companion objects"
  created:  2010-07-06
  tags:     td4j, java, projectUpdates
  path:     "posts/2010/07/06/added-support-for-companion-objects-in-td4j/"
) [[BODY
... Added support for companion objects in td4j ...
BODY]]

post coming_features_201006 (
  group:    td4j
  title:    "Coming new features of td4j"
  refTitle: "Coming new features"
  created:  "2010-06-20"
  tags:     td4j, java, projectUpdates
  path:     "posts/2010/06/20/coming-new-features-of-td4j/"
) [[BODY
... coming-new-features-of-td4j ...
BODY]]
*/


post td4j_v1010_released (
  group:    td4j
  title:    "td4j 10.10 released"
  refTitle: "v10.10 released"
  created:  2010-10-10
//  tags:     td4j, java, projectUpdates
) [[INTRO
<p>This new release includes two major features:
<ul>
<li>Options for mutable individual properties</li>
<li>Companion objects</li>
</ul>
</p>
INTRO]]

[[BODY
<p>Options let you specify a list of elements the user can choose from.
The <em>LocalizedHelloWorldExample</em> declares options for the <em>locale</em> property:</p>

<pre>
<code>public static class HelloWorld {
  private static final Map&lt;Locale, String&gt; messageMap = new HashMap&lt;Locale, String&gt;();

  static {
    messageMap.put(Locale.ENGLISH, "Hi %s! How are you?");
    messageMap.put(Locale.GERMAN, "Hallo %s! Wie gehts?");
    messageMap.put(Locale.FRENCH, "Salut %s! Ã‡a va?");
    messageMap.put(Locale.ITALIAN, "Ciao %s! Come stai?");
  }

  public final List&lt;Locale&gt; <strong>localeOptions</strong> = new ArrayList&lt;Locale&gt;(messageMap.keySet());
  public Locale <strong>locale</strong>;

  public String name = "world";

  public String getGreeting() {
    return String.format(locale != null ? messageMap.get(locale) : "%s", name != null ? name : "");
  }

}</code>
</pre>

<p><img src="http://td4j.sourceforge.net/doc/userguide/img/helloworld/localized_hw_01.png" alt="Localized HelloWorld Example" /></p>

<p>Companion Objects allow to define operations separated from domain entities.
This is especially useful to implement behavior that spans multiple domain objects;
<ul>
<li>factories and repositories</li>
<li>domain services in general</li>
<li>test wrappers for domain services</li>
</ul>
</p>

<p>Check out the new IssueTrackerExample to see how companions are
<a href="http://td4j.svn.sourceforge.net/viewvc/td4j/trunk/td4j/examples/org/td4j/">defined</a> and
<a href="http://td4j.svn.sourceforge.net/viewvc/td4j/trunk/td4j/examples/org/td4j/">configured</a>.
</p>

<p>Get the release from <a href="http://sourceforge.net/projects/td4j/files/">Sourceforge</a>.</p>

<p>See the <a href="http://td4j.svn.sourceforge.net/viewvc/td4j/trunk/td4j/RELEASENOTES?revision=201&#038;view=markup">RELEASENOTES</a> for minor changes.</p>
BODY]]
